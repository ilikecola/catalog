{{/* Make sure all variables are set properly */}}
{{- include "tc.v1.common.loader.init" . }}

{{/*- $_ := set .Values.additionalContainers "ariang" (include "aria2pro.ariang" . | fromYaml) -*/}}
additionalContainers:
  - name: ariang
    image: {{ .Values.ariangImage.repository }}:{{ .Values.ariangImage.tag }}
    imagePullPolicy: '{{ .Values.ariangImage.pullPolicy }}'
  - securityContext:
      runAsUser: {{ .Values.securityContext.container.runAsUser }}
      runAsGroup: {{ .Values.securityContext.runAsGroup }}
      readOnlyRootFilesystem: {{ .Values.securityContext.container.readOnlyRootFilesystem }}
      runAsNonRoot: {{ .Values.securityContext.container.runAsNonRoot }}
  - ports:
    - containerPort: {{ .Values.service.ariang.ports.ariang.port }}
      name: main
  - probes:
      liveness:
        type: tcp
        path: /
        port: "{{ .Values.service.ariang.ports.main.port }}"
      readiness:
        type: tcp
        path: /
        port: "{{ .Values.service.ariang.ports.main.port }}"
      startup:
        type: tcp
        path: /
        port: "{{ .Values.service.ariang.ports.main.port }}"

{{/* inject aria2pro rpc path to all main ingress hosts*/}}
{{- define "aria2pro.rpcinjector" -}}
{{- $path := list (include "aria2pro.rpc" . | fromYaml) -}}
{{- if .Values.ingress.main.enabled }}
{{- range .Values.ingress.main.hosts }}
{{- $newpaths := list }}
{{- $newpaths := concat .paths $path }}
{{- $_ := set . "paths" ( deepCopy $newpaths ) -}}
{{- end }}
{{- end }}
{{- end -}}

{{/* inject aria2pro rpc path paths in ingress */}}
{{- include "aria2pro.rpcinjector" . }}

{{/* Render the templates */}}
{{ include "tc.v1.common.loader.apply" . }}
